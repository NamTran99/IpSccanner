# This is a basic workflow to help you get started with Actions

name: Release APK

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8
          
      - name: Write the keystore file
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > signing-key.jks
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      
      - name: Build the app
        run: ./gradlew build
        
      - name: Assemble release
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${{ github.workspace }}/signing-key.jks -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
        
      - name: Upload APK
        uses: actions/upload-artifact@v2.2.2
        with:
          name: android-network-scanner.apk
          path: ./app/build/outputs/apk/release/app-release.apk
